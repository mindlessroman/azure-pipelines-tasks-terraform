jobs:
- job: terraform_cli
  dependsOn: version
  variables:
      GitVersion.SemVer: $[ dependencies.version.outputs['version.GitVersion.SemVer'] ]
      GitVersion.Major: $[ dependencies.version.outputs['version.GitVersion.Major'] ]
      GitVersion.Minor: $[ dependencies.version.outputs['version.GitVersion.Minor'] ]
      GitVersion.Patch: $[ dependencies.version.outputs['version.GitVersion.Patch'] ]
  steps:
    - task: Npm@1
      displayName: version
      inputs:
        workingDir: $(terraform_cli_dir)
        command: custom
        customCommand: version $(GitVersion.SemVer) --no-git-tag-version --allow-same-version
    - task: Npm@1
      displayName: install  
      inputs:
        workingDir: $(terraform_cli_dir)
        command: ci
    - task: Npm@1
      displayName: build
      inputs:            
        workingDir: $(terraform_cli_dir)
        command: custom
        customCommand: run build
    - task: Npm@1
      displayName: test - report coverage
      inputs:  
        workingDir: $(terraform_cli_dir)
        command: custom
        customCommand: run test:coverage
    - task: PublishCodeCoverageResults@1
      displayName: test - publish coverage
      inputs:
        codeCoverageTool: cobertura
        summaryFileLocation: $(terraform_cli_dir)/.tests/coverage/cobertura-coverage.xml
        reportDirectory: $(terraform_cli_dir)/.tests/coverage
    - task: Npm@1
      displayName: test - report results
      inputs:            
        workingDir: $(terraform_cli_dir)
        command: custom
        customCommand: run test:report
    - task: PublishTestResults@2
      displayName: test - publish results
      inputs:
        testResultsFormat: JUnit
        testResultsFiles: 'results.xml' 
        searchFolder: $(terraform_cli_dir)/.tests       
    - task: qetza.replacetokens.replacetokens-task.replacetokens@3
      displayName: version tasks
      inputs:
        targetFiles: $(terraform_cli_dir)/task.json
        escapeType: none
    - task: Npm@1
      displayName: pack
      inputs:  
        workingDir: $(terraform_cli_dir)
        command: custom
        customCommand: run pack
    - task: CopyFiles@2
      displayName: stage artifacts
      inputs:
        contents: |
          tasks/terraform-cli/.dist/**/*
        targetFolder: $(Build.ArtifactStagingDirectory)
    - publish: '$(Build.ArtifactStagingDirectory)'
      artifact: terraform_cli
      displayName: publish artifacts