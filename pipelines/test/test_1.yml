jobs:
- job: test_1
  steps:
    - task: DownloadPipelineArtifact@2
      displayName: download terraform templates
      inputs: 
        artifact: terraform_templates
        path: $(terraform_extension_dir)
    - task: TerraformInstaller@0
      displayName: install terraform
      inputs:
        terraformVersion: 0.14.3
    - task: TerraformCLI@0
      displayName: 'terraform init'
      inputs:
        command: init
        workingDirectory: $(terraform_templates_dir)
        backendType: azurerm
        backendServiceArm: 'env_test'
        ensureBackend: true
        backendAzureRmResourceGroupName: '$(backend_arm_resource_group)'
        backendAzureRmResourceGroupLocation: '$(backend_arm_location)'
        backendAzureRmStorageAccountName: '$(backend_arm_storage_name)'
        backendAzureRmStorageAccountSku: '$(backend_arm_storage_sku)'
        backendAzureRmContainerName: '$(backend_arm_storage_container)'
        backendAzureRmKey: test_1.tfstate
    - task: TerraformCLI@0
      displayName: 'terraform validate'
      inputs:
        workingDirectory: $(terraform_templates_dir)
        secureVarsFile: ddcbad51-7327-4408-a4b2-fb49aa2c4f28
    - task: TerraformCLI@0
      displayName: 'terraform plan'
      inputs:
        command: plan
        workingDirectory: $(terraform_templates_dir)
        environmentServiceName: 'env_test'
        secureVarsFile: ddcbad51-7327-4408-a4b2-fb49aa2c4f28
        commandOptions: '-out=$(System.DefaultWorkingDirectory)/terraform.tfplan -detailed-exitcode'
    - task: TerraformCLI@0
      displayName: 'terraform apply'
      inputs:
        command: apply
        workingDirectory: $(terraform_templates_dir)
        environmentServiceName: 'env_test'
        commandOptions: '$(System.DefaultWorkingDirectory)/terraform.tfplan'
    - task: TerraformCLI@0
      displayName: 'terraform output'
      inputs:
        command: output
        workingDirectory: $(terraform_templates_dir)
    - bash: |
        echo 'some_string is $(TF_OUT_SOME_STRING)'
        echo 'some_bool is $(TF_OUT_SOME_BOOL)'
        echo 'some_number is $(TF_OUT_SOME_NUMBER)'
        echo 'some_sensitive_string is $(TF_OUT_SOME_SENSITIVE_STRING)'
      displayName: echo tf output vars
    - task: TerraformCLI@0
      displayName: 'terraform destroy'
      inputs:
        command: destroy
        workingDirectory: $(terraform_templates_dir)
        environmentServiceName: 'env_test'
        secureVarsFile: ddcbad51-7327-4408-a4b2-fb49aa2c4f28